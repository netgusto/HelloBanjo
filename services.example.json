{
    "parameters": {
        "dependency_service.file": "./CoolClass",       // File paths are relative to the services.json file
        "dependency2_service.file": "./OtherClass",
        "my_service.file": "MyClass",
        "my_service.example_param": "yes",              // Parameter names are arbitrary
        "my_service.obj_param": { isExample: true }     // Can use literals as parameters
    },
    "services": {
        "dependency_service": {
            "class": "%depency_service.file%",
            "arguments": []  // No Arguments
        },
        "dependency2_service": {
            "class": "%depency2_service.file%",
            "arguments": []
        },
        "my_service": {
            "class": "%my_service.file%"        // Parameters use % symbols, services use @
            "arguments": [
                "@dependency_service",
                "%my_service.example_param%",
                "@?optional_service"            // Optional services have @? at the beginning
            ]
            "calls": [
                ["setSecondDependency", ["@dependency2_service"]] // Method calls have the method name and an array of arguments
            ],
            "properties": {
                "myServiceProperty": "%my_service.obj_param%"
            }
        }
    }
}